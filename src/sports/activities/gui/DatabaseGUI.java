/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sports.activities.gui;

import java.awt.HeadlessException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author saeed
 */
public class DatabaseGUI extends javax.swing.JFrame {

    DatabaseManager dm = new DatabaseManager();
    String SQLQuery;

    /**
     * Creates new form DatabaseGUI
     */
    public DatabaseGUI() {
        initComponents();
        refreshDatabaseTables();

    }

    /**
     * takes the getTableModel method from the DatabaseManager class assigns the
     * method to the JTable
     */
    public void refreshDatabaseTables() {
     
        try {
            SQLQuery = jTextAreaQuery.getText();
            DatabaseTables.setModel(dm.TableModel(SQLQuery));

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(new JFrame(), "Table Does Not Exist \n" + "Please Check \"Table Names\"", "SQLException", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DatabaseTables = new javax.swing.JTable();
        jButtonRefresh = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldActivityType = new javax.swing.JTextField();
        jButtonInsertRow = new javax.swing.JButton();
        jButtonDeleteTuple = new javax.swing.JButton();
        jButtonUpdateTuple = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButtonClear = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaQuery = new javax.swing.JTextArea();
        jDateChooserStart = new com.toedter.calendar.JDateChooser();
        jDateChooserEnd = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        DatabaseTables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "activityType", "startDate", "endDate"
            }
        ));
        jScrollPane1.setViewportView(DatabaseTables);

        jButtonRefresh.setText("Refresh");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jLabel2.setText("Activity Name");

        jLabel3.setText("Activity Start Date");

        jLabel4.setText("Activity End Date");

        jButtonInsertRow.setText("Insert");
        jButtonInsertRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertRowActionPerformed(evt);
            }
        });

        jButtonDeleteTuple.setText("Delete");
        jButtonDeleteTuple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteTupleActionPerformed(evt);
            }
        });

        jButtonUpdateTuple.setText("Update");
        jButtonUpdateTuple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateTupleActionPerformed(evt);
            }
        });

        jLabel5.setText("Type a query from the table and press Refresh button:");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel6.setText("Sports Activities Table Editing:");

        jButtonClear.setText("Clear");
        jButtonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonClearActionPerformed(evt);
            }
        });

        jTextAreaQuery.setColumns(20);
        jTextAreaQuery.setRows(5);
        jTextAreaQuery.setText("SELECT * \nFROM ActivityType");
        jTextAreaQuery.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTextAreaQueryAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jTextAreaQuery);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooserEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jDateChooserStart, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldActivityType, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonInsertRow, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonDeleteTuple, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonUpdateTuple, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jButtonClear, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(115, 115, 115)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 925, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194))
            .addGroup(layout.createSequentialGroup()
                .addGap(758, 758, 758)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldActivityType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonInsertRow)
                            .addComponent(jButtonDeleteTuple)
                            .addComponent(jButtonUpdateTuple))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonClear)
                            .addComponent(jButtonRefresh))
                        .addGap(115, 115, 115))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel13))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * assigns the Refresh button with the refreshDatabaseTables method, every
     * time the button is clicked the JTable will be updated by the result of
     * the mySQL query in the JTextAreaQuery
     *
     * @param evt
     */
    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        // TODO add your handling code here:
        refreshDatabaseTables();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    /**
     * assigns the Insert button with the mySQL insert query from the
     * insertActivity method in the DatabaseManager class 
     * catch blocks states the errors and solution in JFrames to the user 
     * when a specific error happens
     *
     * @param evt
     */
    private void jButtonInsertRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertRowActionPerformed
        // TODO add your handling code here:
        
        try {

            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            ActivityTypeTable at = new ActivityTypeTable(jTextFieldActivityType.getText(),
                    sdf.format(jDateChooserStart.getDate()), sdf.format(jDateChooserEnd.getDate()));
            dm.insertActivity(at);
            JOptionPane.showMessageDialog(new JFrame(), "New Row is Inserted ", "Completed", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException | HeadlessException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(new JFrame(), "An SQL Exception was thrown: \n" + ex.getMessage(), "SQL Exception", JOptionPane.ERROR_MESSAGE);

        } catch (Exception e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(new JFrame(), "Please Type in Correct Values", "Incorrect/Null Vaules", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonInsertRowActionPerformed

    /**
     * assigns the Delete button to return the mySQL delete query from the
     * deleteActivity method in the DatabaseManager class 
     * catch blocks states the errors in a JFrame to the user
     * when a specific error happens
     *
     * @param evt
     */
    private void jButtonDeleteTupleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteTupleActionPerformed
        // TODO add your handling code here:
        try {

            ActivityTypeTable at = new ActivityTypeTable(jTextFieldActivityType.getText());
            dm.deleteActivity(at);

            if (jTextFieldActivityType.getText().equals("")) {
                JOptionPane optionPane = new JOptionPane("Must include Activity Name", JOptionPane.ERROR_MESSAGE);
                JDialog dialog = optionPane.createDialog("Activity Name Error");
                dialog.setAlwaysOnTop(true);
                dialog.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(null, "If the Row of Activity Name EXIST it will be Deleted");
            }

        } catch (SQLException | HeadlessException ex) {
            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage(), "An SQL Exception was thrown:", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteTupleActionPerformed

    /**
     * assigns the Update button to return the mySQL update query from the
     * updateActivity method in the DatabaseManager class 
     * catch blocks states the errors and solution in JFrames to the user when a
     * specific error happens
     *
     * @param evt
     */
    private void jButtonUpdateTupleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateTupleActionPerformed
        // TODO add your handling code here:
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            ActivityTypeTable at = new ActivityTypeTable(jTextFieldActivityType.getText(),
                    sdf.format(jDateChooserStart.getDate()), sdf.format(jDateChooserEnd.getDate()));

            dm.updateActivity(at);
            JOptionPane.showMessageDialog(new JFrame(), "Row is Now Updated (Note: Activity Type Can not be Updated)", "Completed", JOptionPane.INFORMATION_MESSAGE);

        } catch (SQLException | HeadlessException ex) {

            System.out.println(ex.getMessage());
            JOptionPane.showMessageDialog(new JFrame(), ex.getMessage(), "An SQL Exception was thrown:", JOptionPane.ERROR_MESSAGE);

        } catch (Exception e) {

            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(new JFrame(), "Please Type in Correct Values", "Incorrect/Null Vaules", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonUpdateTupleActionPerformed

    /**
     * the clear button is for when the button clicked the text and
     * date fields will be returned as empty.
     *
     * @param evt
     */
    private void jButtonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonClearActionPerformed
        // TODO add your handling code here:
        jTextFieldActivityType.setText("");
        jDateChooserStart.setDate(null);
        jDateChooserEnd.setDate(null);
    }//GEN-LAST:event_jButtonClearActionPerformed

    /**
     * allows the user to type an mySQL query from the relevant database tables
     * in the text box
     *
     * @param evt
     */
    private void jTextAreaQueryAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTextAreaQueryAncestorAdded
        // TODO add your handling code here:
        refreshDatabaseTables();
    }//GEN-LAST:event_jTextAreaQueryAncestorAdded

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DatabaseGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatabaseGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DatabaseTables;
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonDeleteTuple;
    private javax.swing.JButton jButtonInsertRow;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonUpdateTuple;
    private com.toedter.calendar.JDateChooser jDateChooserEnd;
    private com.toedter.calendar.JDateChooser jDateChooserStart;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaQuery;
    private javax.swing.JTextField jTextFieldActivityType;
    // End of variables declaration//GEN-END:variables
}
